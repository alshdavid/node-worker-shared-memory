name: Compile and Publish
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          echo todo

  root-package:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          node .github/scripts/build.mjs package

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/package.tgz
          retention-days: 1

  linux-amd64:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          rustup target add x86_64-unknown-linux-gnu
          node .github/scripts/build.mjs linux-amd64

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/linux-amd64.tgz
          retention-days: 1
      
  linux-arm64:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          sudo apt-get install gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          node .github/scripts/build.mjs linux-arm64
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/linux-arm64.tgz
          retention-days: 1

  macos-amd64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          rustup target add x86_64-apple-darwin
          node .github/scripts/build.mjs macos-amd64

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/macos-amd64.tgz
          retention-days: 1
      
  macos-arm64:
    runs-on: macos-13
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          rustup target add aarch64-apple-darwin
          node .github/scripts/build.mjs macos-arm64

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/macos-arm64.tgz
          retention-days: 1

  windows-amd64:
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          rustup target add x86_64-pc-windows-msvc
          node .github/scripts/build.mjs windows-amd64

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/windows-amd64.tgz
          retention-days: 1

  windows-arm64:
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: |
          npm install
          rustup target add aarch64-pc-windows-msvc
          node .github/scripts/build.mjs windows-arm64

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}
          path: .github/dist/windows-arm64.tgz
          retention-days: 1

  publish-github-release:
    runs-on: ubuntu-latest
    needs: [root-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: target

      - name: Create Github Release
        run: |
          TAG="$(date -u +"%Y.%m.%d.%H%M").${GITHUB_SHA::7}"

          echo "Tag: ${TAG}"

          gh release create $TAG --draft --notes "Automatically built binaries"

          cd target

          for DIR_NAME in * ; do
              cd $DIR_NAME
              chmod -R +x .
              tar -czvf $DIR_NAME.tar.gz *
              gh release upload $TAG $DIR_NAME.tar.gz
              cd ..
          done

          gh release edit $TAG --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm-release:
    runs-on: ubuntu-latest
    needs: [root-package, linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          path: target

      - name: Create Github Release
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> $HOME/.npmrc
          cd .github/dist

          for PKG_NAME in * ; do
              echo $PKG_NAME
              npm publish $PKG_NAME --dry-run
          done

        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
